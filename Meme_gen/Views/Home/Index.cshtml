@model IEnumerable<meme_gen.Models.MemeTemplate>


<div class="masonry-grid">
    <!-- Upload Card: Allows user to upload a custom image -->
    <div class="meme-card upload-card">
        <!-- Hidden file input -->
        <input type="file" id="customImageInput" accept="image/*" style="display:none;" />
        <!-- Preview Area -->
        <div id="uploadPreview" style="cursor:pointer; padding:20px; text-align:center;">
            <p>Click to upload your own meme</p>
            <img id="uploadPreviewImg" src="" alt="Your custom meme" style="max-width:100%; display:none;" />
        </div>
        <!-- Edit button appears after image is chosen -->
        <button id="editCustomBtn" class="btn btn-primary" style="display:none;">Edit Custom Meme</button>
    </div>

    <!-- Existing Meme Cards -->
    @foreach (var meme in Model)
    {
        <div class="meme-card">
            <a href="@Url.Action("Edit", "Meme", new { id = meme.Id })">
                <img src="@meme.ImagePath" alt="@meme.Title" class="meme-image" />
            </a>
        </div>
    }
</div>

@section Scripts {
    <script>
        // When user clicks the preview area, trigger file input
        document.getElementById('uploadPreview').addEventListener('click', function () {
            document.getElementById('customImageInput').click();
        });

        // On file selection, read the file and preview it
        document.getElementById('customImageInput').addEventListener('change', function (e) {
            var file = e.target.files[0];
            if (!file) return;
            var reader = new FileReader();
            reader.onload = function (event) {
                var dataURL = event.target.result;
                var previewImg = document.getElementById('uploadPreviewImg');
                previewImg.src = dataURL;
                previewImg.style.display = 'block';
                document.getElementById('editCustomBtn').style.display = 'block';
                // Store the custom image data in sessionStorage
                sessionStorage.setItem('customMemeImage', dataURL);
            };
            reader.readAsDataURL(file);
        });

        // When the "Edit Custom Meme" button is clicked, redirect to the custom edit view
        document.getElementById('editCustomBtn').addEventListener('click', function () {
            window.location.href = '/Meme/EditCustom';
        });
    </script>
}