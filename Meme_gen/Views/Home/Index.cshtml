@model IEnumerable<meme_gen.Models.MemeTemplate>

<div class="masonry-grid">
    <!-- Upload Card: Allows user to upload a custom image -->
    <div class="meme-card upload-card text-center">
        <!-- Hidden file input -->
        <input type="file" id="customImageInput" accept="image/*" style="display:none;" />
        <!-- Clickable Upload Area -->
        <div id="uploadPreview" style="cursor:pointer; padding:20px; text-align:center;">
            <p id="uploadText">Click to upload your own meme</p>
            <img id="uploadPreviewImg" src="" alt="Your custom meme" style="max-width:100%; display:none;" />
        </div>
        <!-- Edit button (Hidden initially) -->
        <button id="editCustomBtn" class="btn btn-primary mt-3" style="display:none;">Edit Custom Meme</button>
    </div>

    <!-- Existing Meme Cards -->
    @foreach (var meme in Model)
    {
        <div class="meme-card">
            <a href="@Url.Action("Edit", "Meme", new { id = meme.Id })">
                <img src="@meme.ImagePath" alt="@meme.Title" class="meme-image" />
            </a>
        </div>
    }
</div>

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const fileInput = document.getElementById('customImageInput');
            const previewArea = document.getElementById('uploadPreview');
            const previewImg = document.getElementById('uploadPreviewImg');
            const editButton = document.getElementById('editCustomBtn');
            const uploadText = document.getElementById('uploadText');

            // Click preview to trigger file input
            previewArea.addEventListener('click', function () {
                fileInput.click();
            });

            // On file selection, read and preview image
            fileInput.addEventListener('change', function (e) {
                const file = e.target.files[0];
                if (!file) return;

                const reader = new FileReader();
                reader.onload = function (event) {
                    const dataURL = event.target.result;
                    previewImg.src = dataURL;
                    previewImg.style.display = 'block';
                    editButton.style.display = 'block';
                    uploadText.innerText = "Click to upload another meme";

                    // Store the image in localStorage so it's available on the Edit page
                    localStorage.setItem('customMemeImage', dataURL);
                };
                reader.readAsDataURL(file);
            });

            // Redirect to the edit page when the button is clicked
            editButton.addEventListener('click', function () {
                window.location.href = '/Meme/EditCustom';
            });
        });
    </script>
}
